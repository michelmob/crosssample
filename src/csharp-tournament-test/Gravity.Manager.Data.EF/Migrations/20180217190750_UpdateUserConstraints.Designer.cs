// <auto-generated />
using Gravity.Manager.Data.EF;
using Gravity.Manager.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Gravity.Manager.Data.EF.Migrations
{
    [DbContext(typeof(GravityManagerDbContext))]
    [Migration("20180217190750_UpdateUserConstraints")]
    partial class UpdateUserConstraints
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Gravity.Manager.Data.Entities.AuditEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("NewValue")
                        .HasColumnName("NewValue")
                        .HasColumnType("VARCHAR(65535)");

                    b.Property<string>("OldValue")
                        .HasColumnName("OldValue")
                        .HasColumnType("VARCHAR(65535)");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AuditEntry");
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.AwsAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("AwsAccount");
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.AwsInstance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DiscoverySessionId");

                    b.Property<byte[]>("IpAddressBytes")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.HasIndex("DiscoverySessionId");

                    b.ToTable("AwsInstance");
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.Dependency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("SourceAwsInstanceId");

                    b.Property<long>("TargetAwsInstanceId");

                    b.HasKey("Id");

                    b.HasIndex("SourceAwsInstanceId");

                    b.HasIndex("TargetAwsInstanceId");

                    b.ToTable("Dependency");
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.DependencyFinding", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DependencyId");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(4096);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(8192);

                    b.HasKey("Id");

                    b.HasIndex("DependencyId");

                    b.ToTable("DependencyFinding");
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.DiscoverySession", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AwsAccountId");

                    b.Property<DateTime>("RunDate");

                    b.HasKey("Id");

                    b.HasIndex("AwsAccountId");

                    b.ToTable("DiscoverySession");
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<long?>("ParentId")
                        .HasColumnName("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EMail")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<long?>("OrganizationId");

                    b.Property<int>("Role")
                        .HasColumnName("Role");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.AuditEntry", b =>
                {
                    b.HasOne("Gravity.Manager.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.AwsInstance", b =>
                {
                    b.HasOne("Gravity.Manager.Data.Entities.DiscoverySession", "DiscoverySession")
                        .WithMany("AwsInstances")
                        .HasForeignKey("DiscoverySessionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.Dependency", b =>
                {
                    b.HasOne("Gravity.Manager.Data.Entities.AwsInstance", "SourceAwsInstance")
                        .WithMany()
                        .HasForeignKey("SourceAwsInstanceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gravity.Manager.Data.Entities.AwsInstance", "TargetAwsInstance")
                        .WithMany()
                        .HasForeignKey("TargetAwsInstanceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.DependencyFinding", b =>
                {
                    b.HasOne("Gravity.Manager.Data.Entities.Dependency", "Dependency")
                        .WithMany("DependencyFindings")
                        .HasForeignKey("DependencyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.DiscoverySession", b =>
                {
                    b.HasOne("Gravity.Manager.Data.Entities.AwsAccount", "AwsAccount")
                        .WithMany()
                        .HasForeignKey("AwsAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.Organization", b =>
                {
                    b.HasOne("Gravity.Manager.Data.Entities.Organization", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Gravity.Manager.Data.Entities.User", b =>
                {
                    b.HasOne("Gravity.Manager.Data.Entities.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId");
                });
#pragma warning restore 612, 618
        }
    }
}
